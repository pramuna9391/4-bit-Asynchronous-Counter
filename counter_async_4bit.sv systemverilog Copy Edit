module async_counter_4bit (
    input  logic clk,       // Main clock
    input  logic rst_n,     // Active-low reset
    output logic [3:0] q    // 4-bit counter output
);

    // Intermediate flip-flop outputs
    logic q0, q1, q2, q3;

    always_ff @(negedge rst_n or posedge clk)
        if (!rst_n) q0 <= 0;
        else        q0 <= ~q0;

    always_ff @(negedge rst_n or posedge q0)
        if (!rst_n) q1 <= 0;
        else        q1 <= ~q1;

    always_ff @(negedge rst_n or posedge q1)
        if (!rst_n) q2 <= 0;
        else        q2 <= ~q2;

    always_ff @(negedge rst_n or posedge q2)
        if (!rst_n) q3 <= 0;
        else        q3 <= ~q3;

    assign q = {q3, q2, q1, q0};

endmodule
